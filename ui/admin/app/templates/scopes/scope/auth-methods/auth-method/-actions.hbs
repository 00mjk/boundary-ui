{{#if @model.isOIDC}}
  <Rose::Dropdown
    @text={{t (concat 'states.' @model.attributes.state)}}
    @icon={{if
      @model.isInactive
      'disabled'
      (if @model.isPrivate 'lock-closed-outline' 'check-circle-outline')
    }}
    @dropdownRight={{true}}
    as |dropdown|
  >
    <dropdown.section @title={{t 'actions.change-state'}}>
      <Rose::Form as |form|>
        <form.radioGroup
          @name='theme'
          @selectedValue={{@model.attributes.state}}
          @changed={{route-action 'changeState'}}
          as |radioGroup|
        >
          {{#each this.oidcStates as |state|}}
            <dropdown.item>
              <radioGroup.radio
                @label={{t (concat 'states.' state)}}
                @value={{state}}
              />
            </dropdown.item>
          {{/each}}
        </form.radioGroup>
      </Rose::Form>
    </dropdown.section>
  </Rose::Dropdown>
{{/if}}

<Rose::Dropdown
  @text='{{t 'actions.manage'}}'
  @dropdownRight={{true}}
  as |dropdown|
>
  {{#if (feature-flag 'primary-auth-method')}}
    {{#if @model.isPrimary}}
      <dropdown.button
        @disabled={{@model.canSave}}
        {{on 'click' (route-action 'removeAsPrimary' @model)}}
      >
        {{t 'resources.auth-method.actions.remove-as-primary'}}
      </dropdown.button>
    {{else}}
      <dropdown.button
        @disabled={{@model.canSave}}
        {{on 'click' (route-action 'makePrimary' @model)}}
      >
        {{t 'resources.auth-method.actions.make-primary'}}
      </dropdown.button>
    {{/if}}
  {{/if}}
  <dropdown.link
    @route='scopes.scope.auth-methods.auth-method.accounts.new'
    @model={{@model}}
  >
    {{t 'resources.account.actions.create'}}
  </dropdown.link>
  <dropdown.separator />
  <dropdown.button
    @style='danger'
    @disabled={{@model.canSave}}
    {{on 'click' (route-action 'delete' @model)}}
  >
    {{t 'resources.auth-method.actions.delete'}}
  </dropdown.button>
</Rose::Dropdown>