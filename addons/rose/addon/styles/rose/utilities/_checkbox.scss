@use 'sass:map';

@mixin checkbox {
  color: var(--stark);
  margin: 0;
  padding: 0;

  input[type='checkbox'] {
    -webkit-appearance: none;
    appearance: none;
  }

  input[type='checkbox'] {
    display: inline-block;
    position: relative;
    padding: 0;
    margin: 0;
    margin-right: 10px;
    border: 1px solid;
    border-radius: 2px;
    width: 16px;
    height: 16px;
    background: var(--subtle);
    vertical-align: -1px;
  }

  input[type='checkbox']::before {
    content: '';
    position: absolute;
    top: 4px;
    left: 1px;
    border-left: 2px solid;
    border-bottom: 2px solid;
    height: 3px;
    width: 10px;
    transform: rotate(-45deg);
    visibility: hidden;
    border-color: black;
  }

  input[type='checkbox']:checked::before {
    visibility: visible;
  }

  input[type='checkbox']:focus {
    outline: none;
  }
}

@mixin checkbox-style(
  $name,
  $default,
  $hover: &,
  $focus: &,
  $error: &,
  $checked: &,
  $disabled: &
) {
  input[type='checkbox'] {
    -webkit-appearance: none;
    appearance: none;
  }

  .rose-checkbox-#{$name} {
    @include checkbox;
    border-color: map.get($default, border-color);
    color: map.get($default, color);

    & input[type='checkbox'] {
      border-color: map.get($default, border-color);
      background-color: map.get($default, background-color);
    }

    & input[type='checkbox']:hover {
      @if map.get($hover, 'border-color') {
        border-color: map.get($hover, 'border-color');
      }
    }

    & input[type='checkbox']:focus {
      @if map.get($focus, 'border-color') {
        border-color: map.get($focus, 'border-color');
      }
    }

    @if $checked {
      & input[type='checkbox']:checked {
        @if map.get($checked, 'border-color') {
          border-color: map.get($checked, 'border-color');
        }
      }

      & input[type='checkbox']:checked::before {
        @if map.get($checked, 'border-color') {
          border-color: map.get($checked, 'border-color');
        }
      }
    }

    & input[type='checkbox']:disabled {
      cursor: not-allowed;
      @if map.get($disabled, 'border-color') {
        border-color: map.get($disabled, 'border-color');
      }
      @if map.get($disabled, 'background-color') {
        background-color: map.get($disabled, 'background-color');
      }

      &:checked {
        @if map.get($disabled, 'border-color') {
          border-color: map.get($disabled, 'border-color');
        }
      }

      &:checked::before {
        @if map.get($disabled, 'border-color') {
          border-color: map.get($disabled, 'border-color');
        }
      }
    }

    @if $error {
      & input[type='checkbox'].error {
        @if map.get($error, 'border-color') {
          border-color: map.get($error, 'border-color');
        }
      }
    }
  }
}
