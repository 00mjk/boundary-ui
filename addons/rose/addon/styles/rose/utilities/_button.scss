@use 'sass:map';
@use 'type' as typography;
@use '../variables/sizing';

@mixin button {
  @include typography.type(button, semibold);
  display: flex;
  flex-direction: row;
  padding: sizing.rems(off-xs) sizing.rems(l);
  border-radius: sizing.rems(xxxs);
  border: sizing.rems(xxxxs) solid;

  &.rose-button-icon-only {
    padding-right: sizing.rems(s);
    padding-left: sizing.rems(s);
    .rose-button-body {
      position: absolute;
      top: -1000px;
      left: -1000px;
      width: 1px;
      height: 1px;
      opacity: 0;
    }
  }
}

@mixin button-style($name, $default, $hover: &, $active: &, $disabled: &) {
  .rose-button-#{$name} {
    @include button;
    border-color: map.get($default, border-color);
    color: map.get($default, color);
    background-color: map.get($default, background-color);
    @if map.get($default, 'box-shadow') {
      box-shadow: map.get($default, 'box-shadow');
    }
    @if map.get($default, 'text-shadow') {
      text-shadow: map.get($default, 'text-shadow');
    }

    > .rose-button-icon-left {
      margin-left: -(sizing.rems(xs));
      margin-right: sizing.rems(xxs);
    }

    > .rose-button-icon-right {
      margin-left: sizing.rems(xxs);
      margin-right: -(sizing.rems(xs));
    }

    &:not(:disabled) {
      @if $hover {
        &:hover {
          @if map.get($hover, 'border-color') {
            border-color: map.get($hover, 'border-color');
          }
          @if map.get($hover, 'color') {
            color: map.get($hover, 'color');
          }
          @if map.get($hover, 'background-color') {
            background-color: map.get($hover, 'background-color');
          }
          @if map.get($hover, 'box-shadow') {
            box-shadow: map.get($hover, 'box-shadow');
          }
          @if map.get($hover, 'text-shadow') {
            text-shadow: map.get($hover, 'text-shadow');
          }
        }
      }
      @if $active {
        &:active {
          @if map.get($active, 'border-color') {
            border-color: map.get($active, 'border-color');
          }
          @if map.get($active, 'color') {
            color: map.get($active, 'color');
          }
          @if map.get($active, 'background-color') {
            background-color: map.get($active, 'background-color');
          }
          @if map.get($active, 'box-shadow') {
            box-shadow: map.get($active, 'box-shadow');
          }
          @if map.get($active, 'text-shadow') {
            text-shadow: map.get($active, 'text-shadow');
          }
        }
      }
    }

    @if $disabled {
      &:disabled {
        cursor: not-allowed;
        @if map.get($disabled, 'border-color') {
          border-color: map.get($disabled, 'border-color');
        }
        @if map.get($disabled, 'opacity') {
          opacity: map.get($disabled, 'opacity');
        }
        @if map.get($disabled, 'box-shadow') {
          box-shadow: map.get($disabled, 'box-shadow');
        }
      }
    }
  }
}
